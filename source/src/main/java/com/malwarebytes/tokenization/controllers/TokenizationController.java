/*
 * Copyright 2019 Malwarebytes. All Rights Reserved.
 *
 * This software is the proprietary information of Malwarebytes.
 * Use is subject to license terms.
 */
package com.malwarebytes.tokenization.controllers;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.malwarebytes.tokenization.beans.CreditCardRequest;
import com.malwarebytes.tokenization.beans.CreditCardResponse;
import com.malwarebytes.tokenization.beans.CreditCardTokenBean;
import com.malwarebytes.tokenization.stream.TransactionDataProducer;
import com.malwarebytes.tokenization.util.JsonHelper;
import com.malwarebytes.tokenization.util.UUIDGenerator;

/**
 * Tokenization Controller that is used to call backend services.
 * 
 *
 * @author Kiran Kanaparthi
 * @since July 21, 2019
 */
@RestController
@RequestMapping(value = "/api")
public class TokenizationController {

	private static final Logger logger = LoggerFactory.getLogger(TokenizationController.class);

	private final TransactionDataProducer producer;
	
	@Autowired
	public TokenizationController(TransactionDataProducer producer) {
		this.producer = producer;
	}
	
	@PostMapping(value = "/auth", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<CreditCardResponse> sendMessageToKafkaTopic(@Valid @RequestBody final CreditCardRequest message) {
		logger.info("The Input data is {} ",message);
		String transactionId = UUIDGenerator.generateUUID();
		
		CreditCardTokenBean creditCardToken = new CreditCardTokenBean(message.getCardNumber(), 
				message.getExpirationDate(), message.getCvvNumber(),transactionId);

		//Send the data along with the transactionID to the Topic
		this.producer.sendMessage(JsonHelper.convertJavaToJson(creditCardToken));

		//Return the Status and TransactionId in the response.
		CreditCardResponse response = new CreditCardResponse(Boolean.TRUE,transactionId);
        return new ResponseEntity<>(response, HttpStatus.OK);
	}
}
